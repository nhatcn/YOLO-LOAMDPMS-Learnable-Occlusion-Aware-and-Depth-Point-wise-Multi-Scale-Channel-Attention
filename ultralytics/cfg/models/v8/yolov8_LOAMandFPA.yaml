# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license
# YOLOv8 object detection model with LOAM and FPA attention mechanisms
# Model docs: https://docs.ultralytics.com/models/yolov8
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8 backbone with LOAM and FPA
backbone:
  # [from, repeats, module, args]Æ¯
  - [-1, 1, Conv, [64, 3, 2]]   # 0-P1/2, in=3, out=64
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4, in=64, out=128
  - [-1, 3, C2f, [128, True]]   # 2, in=128, out=128
  - [-1, 1, LOAMBlock, [128, 128]]  # 3: LOAM, in=128, out=128
  - [-1, 1, Conv, [256, 3, 2]]  # 4-P3/8, in=128, out=256
  - [-1, 6, C2f, [256, True]]   # 5, in=256, out=256
  - [-1, 1, LOAMBlock, [256, 256]]  # 6: LOAM, in=256, out=256
  - [-1, 1, Conv, [512, 3, 2]]  # 7-P4/16, in=256, out=512
  - [-1, 6, C2f, [512, True]]   # 8, in=512, out=512
  - [-1, 1, LOAMBlock, [512, 512]]  # 9: LOAM, in=512, out=512
  - [-1, 1, Conv, [1024, 3, 2]] # 10-P5/32, in=512, out=1024
  - [-1, 3, C2f, [1024, True]]  # 11, in=1024, out=1024
  - [-1, 1, LOAMBlock, [1024, 1024]]  # 12: LOAM, in=1024, out=1024
  - [-1, 1, DPMS, [1024, 1024]]  # 13: DPMS, in=1024, out=1024

# YOLOv8 head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 14, in=1024
  - [[-1, 9], 1, Concat, [1]]  # 15, cat backbone P4, in=[1024, 512], out=1536
  - [-1, 3, C2f, [512]]        # 16, in=1536, out=512
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 17, in=512
  - [[-1, 6], 1, Concat, [1]]  # 18, cat backbone P3, in=[512, 256], out=768
  - [-1, 3, C2f, [256]]        # 19 (P3/8-small), in=768, out=256
  - [-1, 1, Conv, [256, 3, 2]] # 20, in=256, out=256
  - [[-1, 16], 1, Concat, [1]] # 21, cat head P4, in=[256, 512], out=768
  - [-1, 3, C2f, [512]]        # 22 (P4/16-medium), in=768, out=512
  - [-1, 1, Conv, [512, 3, 2]] # 23, in=512, out=512
  - [[-1, 13], 1, Concat, [1]] # 24, cat backbone P5, in=[512, 1024], out=1536
  - [-1, 3, C2f, [1024]]       # 25 (P5/32-large), in=1536, out=1024
  - [[19, 22, 25], 1, Detect, [nc]]  # Detect(P3, P4, P5), in=[256, 512, 1024]